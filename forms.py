#lets you make forms from classes: used in Django, rails, etc.
from flask_wtf import FlaskForm as Form
from models import User
from wtforms import StringField, PasswordField, TextAreaField
#() lets you do multiple line import
from wtforms.validators import (DataRequired, Regexp, ValidationError, Email, Length, EqualTo)

##all converted to HTML
##generated by python in the backend for us
##can generate all validation on the backend and send it straight to the client
##our custom validator name_exists
def name_exists(form, field):
    if User.select().where(User.username == field.data).exists(): #field refers to StringField in RegisterForm class username
        raise ValidationError('A user with that name already exists.')


def email_exists(form, field):
    if User.select().where(User.email == field.data).exists():
        raise ValidationError('A user with that email address already exists.')

##these are the properties on the form, will eventually be called as Form.username, etc.
class RegisterForm(Form):
    username = StringField(
        'Username', #HTML label generated for us, will be label.text in app.py
        validators=[
            DataRequired(), #says input has to be filled out
            Regexp(
                r'^[a-zA-Z0-9_]+$',
                message=("Username should be one word, letters, "
                         "numbers, and underscores only.")
            ), #built in for us
            name_exists #custom validator
        ])
    email = StringField(
        'Email',
        validators=[
            DataRequired(),
            Email(),
            email_exists
        ])
    password = PasswordField(
        'Password',
        validators=[
            DataRequired(),
            Length(min=2),
            EqualTo('password2', message='Passwords must match.')
        ])
    password2 = PasswordField(
        'Confirm Password',
        validators=[DataRequired()]
    )

class LoginForm(Form):
    email = StringField('Email', validators=[DataRequired(), Email()])
    password = PasswordField('Password', validators=[DataRequired()])

class PostForm(Form):
    content = TextAreaField("Enter Item Description Here", validators=[DataRequired()])
    img = TextAreaField("Enter Image URL Here", validators=[DataRequired()])